# Generated by Django 5.0.1 on 2025-10-30 05:49

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovalWorkflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID)', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
                ('created_by', models.UUIDField(blank=True, help_text='User who created this record', null=True)),
                ('updated_by', models.UUIDField(blank=True, help_text='User who last updated this record', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when record was soft-deleted', null=True)),
                ('deleted_by', models.UUIDField(blank=True, help_text='User who deleted this record', null=True)),
                ('workflow_name', models.CharField(help_text='Unique workflow name', max_length=100, unique=True)),
                ('entity_type', models.CharField(choices=[('PR', 'Purchase Request'), ('PO', 'Purchase Order'), ('GRN', 'Goods Received Note'), ('ADJUSTMENT', 'Inventory Adjustment'), ('TRANSFER', 'Stock Transfer'), ('ISSUE', 'Stock Issue'), ('ASSET_ASSIGNMENT', 'Asset Assignment'), ('MAINTENANCE', 'Maintenance Request')], help_text='Entity type this workflow applies to', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Workflow description', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is workflow active?')),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default workflow for this entity type?')),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum value for this workflow to apply', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum value for this workflow to apply', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('factory', models.ForeignKey(blank=True, help_text='Factory (NULL = applies to all factories)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approval_workflows', to='core.factory')),
            ],
            options={
                'verbose_name': 'Approval Workflow',
                'verbose_name_plural': 'Approval Workflows',
                'db_table': 'approval_workflows',
                'ordering': ['entity_type', 'workflow_name'],
            },
        ),
        migrations.CreateModel(
            name='Approval',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(help_text='Entity type (PR, PO, GRN, etc.)', max_length=50)),
                ('entity_id', models.UUIDField(help_text='Entity UUID')),
                ('entity_number', models.CharField(blank=True, help_text='Human-readable reference (PR-2025-0001, etc.)', max_length=50, null=True)),
                ('current_step_sequence', models.IntegerField(blank=True, help_text='Current step sequence number', null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True, help_text='When approval was requested')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled'), ('ESCALATED', 'Escalated')], default='PENDING', help_text='Current approval status', max_length=20)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When approval was completed', null=True)),
                ('remarks', models.TextField(blank=True, help_text='Requestor remarks', null=True)),
                ('metadata', models.JSONField(blank=True, help_text='Additional context (value, urgency, etc.)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('requested_by', models.ForeignKey(help_text='User who requested approval', on_delete=django.db.models.deletion.PROTECT, related_name='approval_requests', to=settings.AUTH_USER_MODEL)),
                ('workflow', models.ForeignKey(blank=True, help_text='Workflow being used', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approvals', to='approvals.approvalworkflow')),
            ],
            options={
                'verbose_name': 'Approval',
                'verbose_name_plural': 'Approvals',
                'db_table': 'approvals',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalWorkflowStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID)', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
                ('created_by', models.UUIDField(blank=True, help_text='User who created this record', null=True)),
                ('updated_by', models.UUIDField(blank=True, help_text='User who last updated this record', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when record was soft-deleted', null=True)),
                ('deleted_by', models.UUIDField(blank=True, help_text='User who deleted this record', null=True)),
                ('step_sequence', models.IntegerField(help_text='Step sequence (1, 2, 3, etc.)')),
                ('step_name', models.CharField(help_text="Step name (e.g., 'Department Head Approval')", max_length=100)),
                ('is_parallel', models.BooleanField(default=False, help_text='Can this step be approved in parallel with other steps?')),
                ('parallel_group', models.IntegerField(blank=True, help_text='Group number for parallel approvals (same sequence, same group)', null=True)),
                ('is_mandatory', models.BooleanField(default=True, help_text='Is this step mandatory?')),
                ('can_delegate', models.BooleanField(default=True, help_text='Can approver delegate to another user?')),
                ('timeout_hours', models.IntegerField(blank=True, help_text='Hours until escalation (NULL = no timeout)', null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('conditions', models.JSONField(blank=True, help_text='JSON conditions for when this step applies', null=True)),
                ('approver_role', models.ForeignKey(blank=True, help_text='Approver role (any user with this role can approve)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workflow_steps', to='users.role')),
                ('approver_user', models.ForeignKey(blank=True, help_text='Specific approver user (takes precedence over role)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='workflow_steps', to=settings.AUTH_USER_MODEL)),
                ('escalation_role', models.ForeignKey(blank=True, help_text='Escalate to this role if timeout', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='escalation_steps', to='users.role')),
                ('workflow', models.ForeignKey(help_text='Parent workflow', on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='approvals.approvalworkflow')),
            ],
            options={
                'verbose_name': 'Approval Workflow Step',
                'verbose_name_plural': 'Approval Workflow Steps',
                'db_table': 'approval_workflow_steps',
                'ordering': ['workflow', 'step_sequence'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('step_sequence', models.IntegerField(help_text='Step sequence number at time of action')),
                ('action', models.CharField(choices=[('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('DELEGATED', 'Delegated'), ('ESCALATED', 'Escalated'), ('CANCELLED', 'Cancelled')], help_text='Action taken', max_length=20)),
                ('action_date', models.DateTimeField(auto_now_add=True, help_text='When action was taken')),
                ('comments', models.TextField(blank=True, help_text='Approver comments', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of approver', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approval', models.ForeignKey(help_text='Parent approval', on_delete=django.db.models.deletion.CASCADE, related_name='history', to='approvals.approval')),
                ('approver_role', models.ForeignKey(blank=True, help_text='Approver role', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approval_history', to='users.role')),
                ('approver_user', models.ForeignKey(help_text='User who took action', on_delete=django.db.models.deletion.PROTECT, related_name='approval_history', to=settings.AUTH_USER_MODEL)),
                ('delegated_to_user', models.ForeignKey(blank=True, help_text='User to whom approval was delegated', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delegated_approvals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Approval History',
                'verbose_name_plural': 'Approval Histories',
                'db_table': 'approval_history',
                'ordering': ['-action_date'],
                'indexes': [models.Index(fields=['approval', '-action_date'], name='approval_hi_approva_891750_idx'), models.Index(fields=['approver_user', '-action_date'], name='approval_hi_approve_458942_idx'), models.Index(fields=['action', '-action_date'], name='approval_hi_action_ca49b6_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='approvalworkflow',
            index=models.Index(fields=['entity_type', 'is_active'], name='approval_wo_entity__665909_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalworkflow',
            index=models.Index(fields=['is_default'], name='approval_wo_is_defa_c9a6bc_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['entity_type', 'entity_id'], name='approvals_entity__d57650_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['status', 'requested_at'], name='approvals_status_40f5fe_idx'),
        ),
        migrations.AddIndex(
            model_name='approval',
            index=models.Index(fields=['requested_by', 'status'], name='approvals_request_403446_idx'),
        ),
        migrations.AddIndex(
            model_name='approvalworkflowstep',
            index=models.Index(fields=['workflow', 'step_sequence'], name='approval_wo_workflo_9afe11_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='approvalworkflowstep',
            unique_together={('workflow', 'step_sequence')},
        ),
    ]
