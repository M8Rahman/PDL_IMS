# Generated by Django 5.0.1 on 2025-10-22 05:26

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID)', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
                ('created_by', models.UUIDField(blank=True, help_text='User who created this record', null=True)),
                ('updated_by', models.UUIDField(blank=True, help_text='User who last updated this record', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when record was soft-deleted', null=True)),
                ('deleted_by', models.UUIDField(blank=True, help_text='User who deleted this record', null=True)),
                ('name', models.CharField(help_text='Company name', max_length=200)),
                ('address', models.TextField(blank=True, help_text='Company address', null=True)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, help_text='Contact email address', max_length=254, null=True)),
                ('tin_vat', models.CharField(blank=True, help_text='Tax Identification Number / VAT Number', max_length=50, null=True, verbose_name='TIN/VAT Number')),
                ('timezone', models.CharField(default='Asia/Dhaka', help_text='Company timezone', max_length=50)),
                ('base_currency_code', models.CharField(default='BDT', help_text='Base currency code (ISO 4217)', max_length=3)),
            ],
            options={
                'verbose_name': 'Company',
                'verbose_name_plural': 'Companies',
                'db_table': 'companies',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Factory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID)', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
                ('created_by', models.UUIDField(blank=True, help_text='User who created this record', null=True)),
                ('updated_by', models.UUIDField(blank=True, help_text='User who last updated this record', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when record was soft-deleted', null=True)),
                ('deleted_by', models.UUIDField(blank=True, help_text='User who deleted this record', null=True)),
                ('factory_code', models.CharField(help_text="Unique factory code (e.g., 'PDL-F1')", max_length=20, unique=True)),
                ('name', models.CharField(help_text='Factory name', max_length=200)),
                ('address', models.TextField(blank=True, help_text='Factory address', null=True)),
                ('phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20, null=True)),
                ('email', models.EmailField(blank=True, help_text='Contact email address', max_length=254, null=True)),
                ('manager_name', models.CharField(blank=True, help_text='Factory manager name', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is factory currently active?')),
                ('company', models.ForeignKey(help_text='Parent company', on_delete=django.db.models.deletion.PROTECT, related_name='factories', to='core.company')),
            ],
            options={
                'verbose_name': 'Factory',
                'verbose_name_plural': 'Factories',
                'db_table': 'factories',
                'ordering': ['factory_code'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID)', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
                ('created_by', models.UUIDField(blank=True, help_text='User who created this record', null=True)),
                ('updated_by', models.UUIDField(blank=True, help_text='User who last updated this record', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when record was soft-deleted', null=True)),
                ('deleted_by', models.UUIDField(blank=True, help_text='User who deleted this record', null=True)),
                ('dept_code', models.CharField(help_text="Unique department code (e.g., 'IT-001')", max_length=20, unique=True)),
                ('name', models.CharField(help_text='Department name', max_length=100)),
                ('cost_center_code', models.CharField(blank=True, help_text='Cost center code for accounting', max_length=20, null=True)),
                ('manager_id', models.UUIDField(blank=True, help_text='Department manager (User ID)', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is department currently active?')),
                ('factory', models.ForeignKey(help_text='Factory this department belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='departments', to='core.factory')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'departments',
                'ordering': ['dept_code'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID)', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when record was last updated')),
                ('created_by', models.UUIDField(blank=True, help_text='User who created this record', null=True)),
                ('updated_by', models.UUIDField(blank=True, help_text='User who last updated this record', null=True)),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when record was soft-deleted', null=True)),
                ('deleted_by', models.UUIDField(blank=True, help_text='User who deleted this record', null=True)),
                ('location_code', models.CharField(help_text='Unique location code', max_length=50, unique=True)),
                ('name', models.CharField(help_text='Location name', max_length=200)),
                ('location_type', models.CharField(choices=[('WAREHOUSE', 'Warehouse'), ('BUILDING', 'Building'), ('FLOOR', 'Floor'), ('ROOM', 'Room'), ('RACK', 'Rack'), ('BIN', 'Bin')], help_text='Type of location', max_length=20)),
                ('path', models.TextField(blank=True, help_text="Full hierarchical path (e.g., 'WH1/B1/F2/RM05')", null=True)),
                ('capacity_qty', models.DecimalField(blank=True, decimal_places=3, help_text='Storage capacity quantity', max_digits=15, null=True)),
                ('capacity_uom', models.CharField(blank=True, help_text='Unit of measurement for capacity', max_length=10, null=True)),
                ('depth_level', models.IntegerField(default=0, help_text='Depth in hierarchy (0 = root)')),
                ('max_depth', models.IntegerField(default=5, help_text='Maximum allowed depth')),
                ('is_active', models.BooleanField(default=True, help_text='Is location currently active?')),
                ('factory', models.ForeignKey(help_text='Factory this location belongs to', on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='core.factory')),
                ('parent_location', models.ForeignKey(blank=True, help_text='Parent location in hierarchy', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='child_locations', to='core.location')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'db_table': 'locations',
                'ordering': ['path', 'location_code'],
            },
        ),
        migrations.AddIndex(
            model_name='factory',
            index=models.Index(fields=['company', 'is_active'], name='factories_company_978e88_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['factory', 'is_active'], name='departments_factory_a768c0_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['factory', 'is_active'], name='locations_factory_6f675c_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['parent_location'], name='locations_parent__e37557_idx'),
        ),
        migrations.AddIndex(
            model_name='location',
            index=models.Index(fields=['path'], name='locations_path_6002bf_idx'),
        ),
    ]
